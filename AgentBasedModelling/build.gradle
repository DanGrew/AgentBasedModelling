/*
 * PLUGINS: apply all plugins needed for the build
 */
plugins {
    id "com.jfrog.bintray" version "1.6"
}

allprojects { 
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'eclipse'
}

/*
 * VERSIONING: describe build and calculate build number
 */
description = """AgentBasedModelling"""
group = 'AgentBasedModelling'

def buildNumberFromEnvironment = System.getenv()[ 'VERSION_NUMBER' ]
def buildNumberForThisEnvironment = ( buildNumberFromEnvironment != null ? buildNumberFromEnvironment : 'WORKSPACE' ) 
version = buildNumberForThisEnvironment

/*
 * SOURCE: source specific configuration
 */
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
			srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources {
        	srcDir 'test'
        }
    }
}

/*
 * DEPENDENCIES: define repo for resolving dependencies, and the dependencies themselves
 */
repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
     maven { url  "http://dl.bintray.com/dangrew/SystemDigest" } 
}

dependencies {
    compile group: 'SystemDigest', name: 'SystemDigest', version: '1.2.50'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version:'0.3.6'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
    testCompile(group: 'SystemDigest', name: 'SystemDigest', version: '1.2.50', ext: 'jar', classifier: 'tests')
}

/*
 * TESTS: provide output when running unit tests
 */
test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    reports {
	    junitXml.enabled = true
	    html.enabled = false
    }
}

/*
 * TEST PACKAGING: package tests into a separate jar
 */
task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = 'tests'
}
artifacts.archives packageTests
